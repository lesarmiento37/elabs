service: split-checks
useDotenv: true

frameworkVersion: '2'

plugins:
  - serverless-dotenv-plugin
  - serverless-python-requirements
  - serverless-plugin-log-retention
  - serverless-prune-plugin
  - serverless-step-functions
  - serverless-plugin-split-stacks
custom:
  splitStacks:
    nestedStackCount: 2 # Controls the number of created nested stacks
    perFunction: false
    perType: false
    perGroupFunction: true
  environments:
    develop: 'Develop'
  businessImpact:
    develop: 'Testing'
  prune:
    automatic: true
    includeLayers: true
    number: ${env:PRUNE_NUMBER}
  serviceTags:
    Managed-by: 'serverless-framework'
    Team: 'DevOps'
    Country: 'ALL'
    IaC-Repository: 'split-checks'
    BackupScheme: 'NA'
  dotenv:
    include: none
  pythonRequirements:
    dockerizePip: true
    useStaticCache: false
package:
  individually: true

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage}
  region: ${opt:region, 'us-east-1'}
  stackName: ${self:service}
  memorySize: 512
  timeout: 900
  logRetentionInDays: ${env:LOGS_RETENTION_DAYS}
  stackTags: ${self:custom.serviceTags}  

resources:
  Resources:
    #Lambdas Roles
    iamRoleLambdaCreateSftpUser: ${file(templates/iam/lambdas/iam_lambda_create_sftp_user.yml):iamRoleLambdaCreateSftpUser}
    iamRoleLambdaDeleteSftpUser: ${file(templates/iam/lambdas/iam_lambda_delete_sftp_user.yml):iamRoleLambdaDeleteSftpUser}
    iamRoleLambdaNotifierSftpError: ${file(templates/iam/lambdas/iam_lambda_notifier_sftp_error.yml):iamRoleLambdaNotifierSftpError}
    #Step Functions Roles Templates
    iamRoleStateMachineSftpCrudUser: ${file(templates/iam/step_functions/iam_state_machine_crud_sftp_users.yml):iamRoleStateMachineSftpCrudUser}
    #Rule Roles eventbridge
    #iamRuleAWSCostSavingExecution: ${file(templates/iam/iam_rule_aws_cost_saving.yml):iamRuleAWSCostSavingExecution}
    #Rules templates
    #AWSComputeServiceTurnOffRule: ${file(templates/eventbridge/eventbridge.yml):AWSComputeServiceTurnOffRule}
    #Policies
    iamPolicyQaRadian: ${file(templates/iam/policies/iam_policy_qa_radian.yml):iamPolicyQaRadian}
   
#Lambdas templates
functions:
  - ${file(templates/functions/aws_create_sftp_user.yml)}
  - ${file(templates/functions/aws_delete_sftp_user.yml)}
  - ${file(templates/functions/notifier_sftp_error.yml)}

#Step Functions templates
stepFunctions:
  stateMachines:
    AWSComputeServiceStop: 
      ${file(templates/step_functions/aws_sftp_crud_notifier.yml)}